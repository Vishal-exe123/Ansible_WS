- hosts: all
  vars_files:
  - var.yml

  tasks:
  - file:
          state:  directory
          path:  "{{  dvd_dir  }}"

  - mount:
          src:  "/dev/cdrom"
          path:  "{{ dvd_dir  }}"
          state:  mounted
          fstype:  "iso9660"

  - yum_repository:
          baseurl:  "{{ dvd_dir }}/AppStream"
          name: "dvd1"
          description:  "my yum  DVD1"
          gpgcheck: no

  - yum_repository:
          baseurl:  "{{ dvd_dir }}/BaseOS"
          name: "dvd2"
          description:  "my yum  DVD2"
          gpgcheck: no



- hosts:  myweb
  vars_files:
  - var.yml
          
  tasks:
  - name:  "Going to install httpd"
    package:
            name:  "httpd"
            state:  present  

  - name:  "Going to install php"
    package:
            name:  "php"
            state:  present

  - name: "Creating document  root" 
    file:
            state:  directory
            path:  "{{ doc_root }}"

  - name:  "Copying pages in {{ doc_root }}"
    copy:
            dest:  "{{ doc_root }}/index.php"
            src:  "index.php"
             
  - template:
          dest:  "/etc/httpd/conf.d/vish.conf"
          src:  "vish.conf"

  - replace:
          path:  "/etc/httpd/conf/httpd.conf"
          regexp:  "AllowOverride None"
          replace:  "AllowOverride  AuthConfig"

  - copy:
          dest:  "{{ doc_root }}/.htaccess"
          src:  ".htaccess"

  - package:
          name:  "python36"
          state:  present

  - pip:
          name: "passlib"

  - htpasswd:
          path:  "/etc/www.passwd"
          name:  "Vishal123"
          password: "Vishal"



  - name:  "Setting Up Firewall rule"
    firewalld:
            port: "{{ port_no }}/tcp"
            state:  enabled
            permanent:  yes
            immediate:  yes


  - name:  "restarting service"
    service:
            name:  "httpd"
            state:  restarted


- hosts:  mylb
  vars_files:
  - var.yml

  tasks:
  - name:  "Installing Haproxy"
    package:
            name:  "haproxy"
            state:  present

  - name:  "Copying  haproxy template"
    template:
            dest:  "/etc/haproxy/haproxy.cfg"
            src:  "haproxy.cfg.j2"

  - name:  "Starting  Haproxy  Service"
    service:
            name:  "haproxy"
            state:  restarted
                    

